import { expect, test } from "vitest"
import { keys } from "ramda"
import Spinneret from "@/spinneret"
import * as raw from "@/spinneret"

test("default import", () => {
  expect(keys(Spinneret).sort()).toEqual([
    "$",
    "constants",
    "decorators",
    "getSignature",
    "inscribe",
    "isMarked",
    "isPlaceholder",
    "makeSelector",
    "mount",
    "selector",
    "spin",
    "svg",
    "tag",
  ])
})

test("wildcard import", () => {
  expect(keys(raw).sort()).toEqual([
    "$",
    "HTML_TAGS",
    "MARKED",
    "NAMESPACES",
    "SVG_TAGS",
    "SYMBOL",
    "_attr",
    "_textify",
    "attr",
    "autobox",
    "base",
    "capitalize",
    "captureListeners",
    "clearRect",
    "createElementNS",
    "default",
    "formValues",
    "get2dContext",
    "getContext",
    "getContextWithOptions",
    "getSignature",
    "handleForm",
    "htmlText",
    "inscribe",
    "isMarked",
    "isPlaceholder",
    "listenTo",
    "literalSvg",
    "literalSvgWithScope",
    "literalTag",
    "literalTagWithScope",
    "literalWithScope",
    "makeSelector",
    "mapKids",
    "mapProps",
    "mapTag",
    "mount",
    "nsFromString",
    "onClick",
    "onSubmit",
    "placeholderToString",
    "prependString",
    "processChildren",
    "remap",
    "safeStringify",
    "safeStringifyWithIndent",
    "schonfinkel",
    "selector",
    "set",
    "slugify",
    "spin",
    "stamp",
    "styleAttr",
    "styled",
    "styledWithScope",
    "svg",
    "svgTag",
    "tag",
    "text",
    "toString",
    "trace",
    "withState",
    "xtrace",
  ])
})
